version: 2.1

defaults: &defaults
    docker:
      - image: node:16.14

deploy_defaults: &deploy_defaults
    docker:
      - image: cimg/python:3.10.2

install_build_dependency: &install_build_dependency
    name: Installation of build and deployment dependencies.
    command: |
      apt-get update -y && apt-get install -qq -y python-pip libpython-dev
      curl -O https://bootstrap.pypa.io/pip/2.7/get-pip.py && python get-pip.py
      #installing awscli
      pip install awscli --upgrade
      apt install jq -y

install_dependency: &install_dependency
    name: Installation of build and deployment dependencies.
    command: |
      pip3 install awscli --upgrade

install_deploysuite: &install_deploysuite
    name: Installation of install_deploysuite.
    command: |
      git clone --branch v1.4.13 https://github.com/topcoder-platform/tc-deploy-scripts ../buildscript
      cp ./../buildscript/master_deploy.sh .
      cp ./../buildscript/buildenv.sh .
      cp ./../buildscript/awsconfiguration.sh .

restore_cache_settings_for_build: &restore_cache_settings_for_build
    key: connect-node-modules-{{ checksum package-lock.json" }}

save_cache_settings: &save_cache_settings
    key: connect-node-modules-{{ checksum "package-lock.json" }}
    paths:
      - node_modules

running_npm_build: &running_npm_build
    name: Running npm Build
    command: |
      npm install
      npm run build

workspace_persist: &workspace_persist
    root: .
    paths:
      - dist

workspace_attach: &workspace_attach
    at: ./workspace

check_types: &check_types
  name: Check Types
  command: |
    npm ci
    npm run types
    diffstatus=$(git status --porcelain)
    echo DIFF=$diffstatus >> $GITHUB_OUTPUT

check_types_steps: &check_types_steps
    - checkout
    - setup_remote_docker
    - run: *check_types

build_steps: &build_steps
    # Initialization.
    - checkout
    - setup_remote_docker
    - run: *install_build_dependency
    - run: *install_deploysuite
    - run: *running_npm_build
    - persist_to_workspace: *workspace_persist


deploy_steps: &deploy_steps
    - checkout
    - attach_workspace: *workspace_attach
    - run: *install_dependency
    - run: *install_deploysuite
    - deploy:
        name: Running MasterScript
        command: |
          ./awsconfiguration.sh $DEPLOY_ENV
          source awsenvconf
          ./buildenv.sh -e $DEPLOY_ENV -b ${LOGICAL_ENV}-${APPNAME}-deployvar
          source buildenvvar
          ./master_deploy.sh -d CFRONT -e $DEPLOY_ENV -c $ENABLE_CACHE

jobs:
    
  build-dev:
    <<: *defaults
    environment:
      DEPLOY_ENV: "DEV"
      LOGICAL_ENV: "dev"
      APPNAME: "universal-navigation"
    steps: *build_steps

  build-prod:
    <<: *defaults
    environment:
      DEPLOY_ENV: "PROD"
      LOGICAL_ENV: "prod"
      APPNAME: "universal-navigation"
    steps: *build_steps
  
  # Just tests commited code.
  deployDev:
    <<: *deploy_defaults
    environment:
      DEPLOY_ENV: "DEV"
      LOGICAL_ENV: "dev"
      ENABLE_CACHE: true
      APPNAME: "universal-navigation"
    steps: *deploy_steps

  deployProd:
    <<: *deploy_defaults
    environment:
      DEPLOY_ENV: "PROD"
      LOGICAL_ENV: "prod"
      ENABLE_CACHE: true
      APPNAME: "universal-navigation"
    steps: *deploy_steps

  checkTypes:
    <<: *defaults
    steps: *check_types_steps



workflows:
  version: 2
  build:
    jobs:
      - checkTypes:
          context : org-global
          filters: 
            branches:
              only:
                - github-workflows

      - build-dev:
          context : org-global
          filters:
            branches:
              ignore:
                - master

      - build-prod:
          context : org-global
          filters:
            branches:
              only:
                - master

      - deployDev:
          context : org-global
          requires:
            - build-dev
            # temporarily permit prod builds
            - build-prod
          filters: 
            branches:
              only:
                - dev
                # temporarily deploy master to dev
                - master

      # - deployProd:
      #     context : org-global
      #     requires:
      #       - build-prod
      #     filters: 
      #       branches:
      #         only:
      #           - master
